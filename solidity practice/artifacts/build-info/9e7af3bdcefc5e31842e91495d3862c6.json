{
	"id": "9e7af3bdcefc5e31842e91495d3862c6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"solidity practice/byte.sol": {
				"content": "//SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.7.0<0.9.0;\n\ncontract ByteImplementation{\n\n    function strToByte(string memory data) pure internal returns(bytes memory){\n        return bytes(data);\n    }\n\n    function returnLength() public pure returns(uint){\n        return strToByte(\"sulabh\").length;\n    }\n\n//cannot execute split. returns error\n\n    // function splitStr() public pure returns(string[] memory){\n    //     return strToByte(\"sulabh\").split(\" \");\n    // }\n\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"solidity practice/byte.sol": {
				"ByteImplementation": {
					"abi": [
						{
							"inputs": [],
							"name": "returnLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"solidity practice/byte.sol\":68:484  contract ByteImplementation{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"solidity practice/byte.sol\":68:484  contract ByteImplementation{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa4081e16\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"solidity practice/byte.sol\":217:316  function returnLength() public pure returns(uint){... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n        /* \"solidity practice/byte.sol\":261:265  uint */\n      0x00\n        /* \"solidity practice/byte.sol\":283:302  strToByte(\"sulabh\") */\n      tag_9\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      0x73756c6162680000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"solidity practice/byte.sol\":283:292  strToByte */\n      tag_10\n        /* \"solidity practice/byte.sol\":283:302  strToByte(\"sulabh\") */\n      jump\t// in\n    tag_9:\n        /* \"solidity practice/byte.sol\":283:309  strToByte(\"sulabh\").length */\n      mload\n        /* \"solidity practice/byte.sol\":276:309  return strToByte(\"sulabh\").length */\n      swap1\n      pop\n        /* \"solidity practice/byte.sol\":217:316  function returnLength() public pure returns(uint){... */\n      swap1\n      jump\t// out\n        /* \"solidity practice/byte.sol\":102:211  function strToByte(string memory data) pure internal returns(bytes memory){... */\n    tag_10:\n        /* \"solidity practice/byte.sol\":163:175  bytes memory */\n      0x60\n        /* \"solidity practice/byte.sol\":199:203  data */\n      dup2\n        /* \"solidity practice/byte.sol\":186:204  return bytes(data) */\n      swap1\n      pop\n        /* \"solidity practice/byte.sol\":102:211  function strToByte(string memory data) pure internal returns(bytes memory){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:125   */\n    tag_13:\n        /* \"#utility.yul\":94:118   */\n      tag_15\n        /* \"#utility.yul\":112:117   */\n      dup2\n        /* \"#utility.yul\":94:118   */\n      tag_16\n      jump\t// in\n    tag_15:\n        /* \"#utility.yul\":89:92   */\n      dup3\n        /* \"#utility.yul\":82:119   */\n      mstore\n        /* \"#utility.yul\":7:125   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":131:353   */\n    tag_7:\n        /* \"#utility.yul\":224:228   */\n      0x00\n        /* \"#utility.yul\":262:264   */\n      0x20\n        /* \"#utility.yul\":251:260   */\n      dup3\n        /* \"#utility.yul\":247:265   */\n      add\n        /* \"#utility.yul\":239:265   */\n      swap1\n      pop\n        /* \"#utility.yul\":275:346   */\n      tag_18\n        /* \"#utility.yul\":343:344   */\n      0x00\n        /* \"#utility.yul\":332:341   */\n      dup4\n        /* \"#utility.yul\":328:345   */\n      add\n        /* \"#utility.yul\":319:325   */\n      dup5\n        /* \"#utility.yul\":275:346   */\n      tag_13\n      jump\t// in\n    tag_18:\n        /* \"#utility.yul\":131:353   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":359:436   */\n    tag_16:\n        /* \"#utility.yul\":396:403   */\n      0x00\n        /* \"#utility.yul\":425:430   */\n      dup2\n        /* \"#utility.yul\":414:430   */\n      swap1\n      pop\n        /* \"#utility.yul\":359:436   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220696825d63f2f89b1f71d6e2723f66c4ff9088f8c699ab4447bb4f2355cd82b2e64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060fb8061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063a4081e1614602d575b600080fd5b60336047565b604051603e919060a2565b60405180910390f35b600060856040518060400160405280600681526020017f73756c6162680000000000000000000000000000000000000000000000000000815250608b565b51905090565b6060819050919050565b609c8160bb565b82525050565b600060208201905060b560008301846095565b92915050565b600081905091905056fea2646970667358221220696825d63f2f89b1f71d6e2723f66c4ff9088f8c699ab4447bb4f2355cd82b2e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xFB DUP1 PUSH2 0x1F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA4081E16 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3E SWAP2 SWAP1 PUSH1 0xA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x85 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x73756C6162680000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x8B JUMP JUMPDEST MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9C DUP2 PUSH1 0xBB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xB5 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x95 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x6825D63F2F89B1F71D6E 0x27 0x23 0xF6 PUSH13 0x4FF9088F8C699AB4447BB4F235 0x5C 0xD8 0x2B 0x2E PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "68:416:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@returnLength_25": {
									"entryPoint": 71,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@strToByte_14": {
									"entryPoint": 139,
									"id": 14,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 149,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 162,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 187,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:439:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "72:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "89:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "112:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "94:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "94:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "82:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "82:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "60:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "67:3:1",
														"type": ""
													}
												],
												"src": "7:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "229:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "239:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "251:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "262:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "247:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "247:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "239:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "319:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "332:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "343:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "328:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "275:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "275:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "201:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "213:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "224:4:1",
														"type": ""
													}
												],
												"src": "131:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "404:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "414:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "425:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "414:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "386:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "396:7:1",
														"type": ""
													}
												],
												"src": "359:77:1"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060285760003560e01c8063a4081e1614602d575b600080fd5b60336047565b604051603e919060a2565b60405180910390f35b600060856040518060400160405280600681526020017f73756c6162680000000000000000000000000000000000000000000000000000815250608b565b51905090565b6060819050919050565b609c8160bb565b82525050565b600060208201905060b560008301846095565b92915050565b600081905091905056fea2646970667358221220696825d63f2f89b1f71d6e2723f66c4ff9088f8c699ab4447bb4f2355cd82b2e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA4081E16 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3E SWAP2 SWAP1 PUSH1 0xA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x85 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x73756C6162680000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x8B JUMP JUMPDEST MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9C DUP2 PUSH1 0xBB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xB5 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x95 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x6825D63F2F89B1F71D6E 0x27 0x23 0xF6 PUSH13 0x4FF9088F8C699AB4447BB4F235 0x5C 0xD8 0x2B 0x2E PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "68:416:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;217:99;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;261:4;283:19;;;;;;;;;;;;;;;;;;:9;:19::i;:::-;:26;276:33;;217:99;:::o;102:109::-;163:12;199:4;186:18;;102:109;;;:::o;7:118:1:-;94:24;112:5;94:24;:::i;:::-;89:3;82:37;7:118;;:::o;131:222::-;224:4;262:2;251:9;247:18;239:26;;275:71;343:1;332:9;328:17;319:6;275:71;:::i;:::-;131:222;;;;:::o;359:77::-;396:7;425:5;414:16;;359:77;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "50200",
								"executionCost": "99",
								"totalCost": "50299"
							},
							"external": {
								"returnLength()": "414"
							},
							"internal": {
								"strToByte(string memory)": "28"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 68,
									"end": 484,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 68,
									"end": 484,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 68,
									"end": 484,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 68,
									"end": 484,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 68,
									"end": 484,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 68,
									"end": 484,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 68,
									"end": 484,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 68,
									"end": 484,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 68,
									"end": 484,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 68,
									"end": 484,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 68,
									"end": 484,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 68,
									"end": 484,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 68,
									"end": 484,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 68,
									"end": 484,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 68,
									"end": 484,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 68,
									"end": 484,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 68,
									"end": 484,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 68,
									"end": 484,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 68,
									"end": 484,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 68,
									"end": 484,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 68,
									"end": 484,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220696825d63f2f89b1f71d6e2723f66c4ff9088f8c699ab4447bb4f2355cd82b2e64736f6c63430008070033",
									".code": [
										{
											"begin": 68,
											"end": 484,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 68,
											"end": 484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 68,
											"end": 484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 68,
											"end": 484,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 68,
											"end": 484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68,
											"end": 484,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 68,
											"end": 484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 68,
											"end": 484,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68,
											"end": 484,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 68,
											"end": 484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68,
											"end": 484,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 68,
											"end": 484,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 68,
											"end": 484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68,
											"end": 484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68,
											"end": 484,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 68,
											"end": 484,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 68,
											"end": 484,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 68,
											"end": 484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 68,
											"end": 484,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68,
											"end": 484,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 68,
											"end": 484,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 68,
											"end": 484,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 68,
											"end": 484,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 68,
											"end": 484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68,
											"end": 484,
											"name": "PUSH",
											"source": 0,
											"value": "A4081E16"
										},
										{
											"begin": 68,
											"end": 484,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 68,
											"end": 484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 68,
											"end": 484,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68,
											"end": 484,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 68,
											"end": 484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68,
											"end": 484,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 68,
											"end": 484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68,
											"end": 484,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 217,
											"end": 316,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 217,
											"end": 316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 217,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 217,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 217,
											"end": 316,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 217,
											"end": 316,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 217,
											"end": 316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 217,
											"end": 316,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 217,
											"end": 316,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 217,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 217,
											"end": 316,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 217,
											"end": 316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 217,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 217,
											"end": 316,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 217,
											"end": 316,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 217,
											"end": 316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 217,
											"end": 316,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 217,
											"end": 316,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 217,
											"end": 316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 217,
											"end": 316,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 217,
											"end": 316,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 217,
											"end": 316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 217,
											"end": 316,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 217,
											"end": 316,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 217,
											"end": 316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 261,
											"end": 265,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 283,
											"end": 302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 283,
											"end": 302,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 283,
											"end": 302,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 283,
											"end": 302,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 283,
											"end": 302,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 283,
											"end": 302,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 283,
											"end": 302,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 283,
											"end": 302,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 283,
											"end": 302,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 283,
											"end": 302,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 283,
											"end": 302,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 283,
											"end": 302,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 283,
											"end": 302,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 283,
											"end": 302,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 283,
											"end": 302,
											"name": "PUSH",
											"source": 0,
											"value": "73756C6162680000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 283,
											"end": 302,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 283,
											"end": 302,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 283,
											"end": 302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 283,
											"end": 292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 283,
											"end": 302,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 283,
											"end": 302,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 283,
											"end": 302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 283,
											"end": 309,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 276,
											"end": 309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 276,
											"end": 309,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 217,
											"end": 316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 217,
											"end": 316,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 102,
											"end": 211,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 102,
											"end": 211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 163,
											"end": 175,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 199,
											"end": 203,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 186,
											"end": 204,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 186,
											"end": 204,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 102,
											"end": 211,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 102,
											"end": 211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 102,
											"end": 211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 102,
											"end": 211,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 112,
											"end": 117,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 89,
											"end": 92,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 82,
											"end": 119,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7,
											"end": 125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 125,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 131,
											"end": 353,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 131,
											"end": 353,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 224,
											"end": 228,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 264,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 251,
											"end": 260,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 247,
											"end": 265,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 239,
											"end": 265,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 239,
											"end": 265,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 275,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 343,
											"end": 344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 332,
											"end": 341,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 328,
											"end": 345,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 319,
											"end": 325,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 275,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 131,
											"end": 353,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 131,
											"end": 353,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 131,
											"end": 353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 131,
											"end": 353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 131,
											"end": 353,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 359,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 359,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 396,
											"end": 403,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 425,
											"end": 430,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 414,
											"end": 430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 414,
											"end": 430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 359,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 359,
											"end": 436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 359,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 359,
											"end": 436,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"returnLength()": "a4081e16"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"returnLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solidity practice/byte.sol\":\"ByteImplementation\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"solidity practice/byte.sol\":{\"keccak256\":\"0xd6427fe432c77527e1b3d73e4b95ad0ccaceb9cf83e12644c391ee26eae457fd\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a29efb572192bdcedab4fc4b1a6bd6d2eb203e4dfe985f96dc29aeb73c62cc9e\",\"dweb:/ipfs/QmS3omrtijZpV4FtPJWkBFXQYYDMnXBL5ERHx2cvAZsWzG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"solidity practice/byte.sol": {
				"ast": {
					"absolutePath": "solidity practice/byte.sol",
					"exportedSymbols": {
						"ByteImplementation": [
							26
						]
					},
					"id": 27,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:30:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 26,
							"linearizedBaseContracts": [
								26
							],
							"name": "ByteImplementation",
							"nameLocation": "77:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 13,
										"nodeType": "Block",
										"src": "176:35:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 10,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "199:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 9,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "193:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 8,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "193:5:0",
															"typeDescriptions": {}
														}
													},
													"id": 11,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "193:11:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 7,
												"id": 12,
												"nodeType": "Return",
												"src": "186:18:0"
											}
										]
									},
									"id": 14,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "strToByte",
									"nameLocation": "111:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "135:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "121:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "121:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "120:20:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "163:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 5,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "163:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "162:14:0"
									},
									"scope": 26,
									"src": "102:109:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "266:50:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"hexValue": "73756c616268",
																"id": 20,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "293:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_6cc1439f36a723ead6b87ce1f78bd867fd694667fe71df45340ddb735603520a",
																	"typeString": "literal_string \"sulabh\""
																},
																"value": "sulabh"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_6cc1439f36a723ead6b87ce1f78bd867fd694667fe71df45340ddb735603520a",
																	"typeString": "literal_string \"sulabh\""
																}
															],
															"id": 19,
															"name": "strToByte",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 14,
															"src": "283:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																"typeString": "function (string memory) pure returns (bytes memory)"
															}
														},
														"id": 21,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "283:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "283:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 18,
												"id": 23,
												"nodeType": "Return",
												"src": "276:33:0"
											}
										]
									},
									"functionSelector": "a4081e16",
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "returnLength",
									"nameLocation": "226:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "238:2:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "261:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "261:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "260:6:0"
									},
									"scope": 26,
									"src": "217:99:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 27,
							"src": "68:416:0",
							"usedErrors": []
						}
					],
					"src": "36:448:0"
				},
				"id": 0
			}
		}
	}
}