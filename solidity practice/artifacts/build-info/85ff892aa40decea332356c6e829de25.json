{
	"id": "85ff892aa40decea332356c6e829de25",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"solidity practice/enums.sol": {
				"content": "//SPDX-License-Identifier:GPL-3.0\n\npragma solidity >=0.7.0<0.9.0;\n\ncontract EnumLearning{\n    enum PizzaSize{\n        LARGER, MEDIUM, SMALL\n    }\n\n    PizzaSize choice;\n    PizzaSize constant defaultChoice = PizzaSize.MEDIUM;\n\n    //lets change the size of pizza\n\n    function changeSize() public{\n        choice = PizzaSize.MEDIUM;\n    }\n\n    function checkSize() public view returns(string memory){\n         if(choice==defaultChoice){\n            return \"This is the right choice!!!\";\n\n        }else{\n            return \"No other choice is needed!!!\";\n        }\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"solidity practice/enums.sol": {
				"EnumLearning": {
					"abi": [
						{
							"inputs": [],
							"name": "changeSize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "checkSize",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"solidity practice/enums.sol\":67:571  contract EnumLearning{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"solidity practice/enums.sol\":67:571  contract EnumLearning{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xb1a0c19f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xf303d10f\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"solidity practice/enums.sol\":344:569  function checkSize() public view returns(string memory){... */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"solidity practice/enums.sol\":268:338  function changeSize() public{... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      stop\n        /* \"solidity practice/enums.sol\":344:569  function checkSize() public view returns(string memory){... */\n    tag_6:\n        /* \"solidity practice/enums.sol\":385:398  string memory */\n      0x60\n        /* \"solidity practice/enums.sol\":208:224  PizzaSize.MEDIUM */\n      0x01\n        /* \"solidity practice/enums.sol\":413:434  choice==defaultChoice */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_12\n      jumpi\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n    tag_12:\n        /* \"solidity practice/enums.sol\":413:419  choice */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"solidity practice/enums.sol\":413:434  choice==defaultChoice */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_15\n      jumpi\n      tag_16\n      tag_14\n      jump\t// in\n    tag_16:\n    tag_15:\n      eq\n        /* \"solidity practice/enums.sol\":410:563  if(choice==defaultChoice){... */\n      iszero\n      tag_17\n      jumpi\n        /* \"solidity practice/enums.sol\":449:485  return \"This is the right choice!!!\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      0x54686973206973207468652072696768742063686f6963652121210000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n      jump(tag_11)\n        /* \"solidity practice/enums.sol\":410:563  if(choice==defaultChoice){... */\n    tag_17:\n        /* \"solidity practice/enums.sol\":515:552  return \"No other choice is needed!!!\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1c\n      dup2\n      mstore\n      0x20\n      add\n      0x4e6f206f746865722063686f696365206973206e656564656421212100000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"solidity practice/enums.sol\":344:569  function checkSize() public view returns(string memory){... */\n    tag_11:\n      swap1\n      jump\t// out\n        /* \"solidity practice/enums.sol\":268:338  function changeSize() public{... */\n    tag_10:\n        /* \"solidity practice/enums.sol\":315:331  PizzaSize.MEDIUM */\n      0x01\n        /* \"solidity practice/enums.sol\":306:312  choice */\n      0x00\n      dup1\n        /* \"solidity practice/enums.sol\":306:331  choice = PizzaSize.MEDIUM */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x02\n      dup2\n      gt\n      iszero\n      tag_20\n      jumpi\n      tag_21\n      tag_14\n      jump\t// in\n    tag_21:\n    tag_20:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"solidity practice/enums.sol\":268:338  function changeSize() public{... */\n      jump\t// out\n        /* \"#utility.yul\":7:371   */\n    tag_23:\n        /* \"#utility.yul\":95:98   */\n      0x00\n        /* \"#utility.yul\":123:162   */\n      tag_25\n        /* \"#utility.yul\":156:161   */\n      dup3\n        /* \"#utility.yul\":123:162   */\n      tag_26\n      jump\t// in\n    tag_25:\n        /* \"#utility.yul\":178:249   */\n      tag_27\n        /* \"#utility.yul\":242:248   */\n      dup2\n        /* \"#utility.yul\":237:240   */\n      dup6\n        /* \"#utility.yul\":178:249   */\n      tag_28\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":171:249   */\n      swap4\n      pop\n        /* \"#utility.yul\":258:310   */\n      tag_29\n        /* \"#utility.yul\":303:309   */\n      dup2\n        /* \"#utility.yul\":298:301   */\n      dup6\n        /* \"#utility.yul\":291:295   */\n      0x20\n        /* \"#utility.yul\":284:289   */\n      dup7\n        /* \"#utility.yul\":280:296   */\n      add\n        /* \"#utility.yul\":258:310   */\n      tag_30\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":335:364   */\n      tag_31\n        /* \"#utility.yul\":357:363   */\n      dup2\n        /* \"#utility.yul\":335:364   */\n      tag_32\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":330:333   */\n      dup5\n        /* \"#utility.yul\":326:365   */\n      add\n        /* \"#utility.yul\":319:365   */\n      swap2\n      pop\n        /* \"#utility.yul\":99:371   */\n      pop\n        /* \"#utility.yul\":7:371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":377:690   */\n    tag_8:\n        /* \"#utility.yul\":490:494   */\n      0x00\n        /* \"#utility.yul\":528:530   */\n      0x20\n        /* \"#utility.yul\":517:526   */\n      dup3\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"#utility.yul\":505:531   */\n      swap1\n      pop\n        /* \"#utility.yul\":577:586   */\n      dup2\n        /* \"#utility.yul\":571:575   */\n      dup2\n        /* \"#utility.yul\":567:587   */\n      sub\n        /* \"#utility.yul\":563:564   */\n      0x00\n        /* \"#utility.yul\":552:561   */\n      dup4\n        /* \"#utility.yul\":548:565   */\n      add\n        /* \"#utility.yul\":541:588   */\n      mstore\n        /* \"#utility.yul\":605:683   */\n      tag_34\n        /* \"#utility.yul\":678:682   */\n      dup2\n        /* \"#utility.yul\":669:675   */\n      dup5\n        /* \"#utility.yul\":605:683   */\n      tag_23\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":597:683   */\n      swap1\n      pop\n        /* \"#utility.yul\":377:690   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:795   */\n    tag_26:\n        /* \"#utility.yul\":748:754   */\n      0x00\n        /* \"#utility.yul\":782:787   */\n      dup2\n        /* \"#utility.yul\":776:788   */\n      mload\n        /* \"#utility.yul\":766:788   */\n      swap1\n      pop\n        /* \"#utility.yul\":696:795   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":801:970   */\n    tag_28:\n        /* \"#utility.yul\":885:896   */\n      0x00\n        /* \"#utility.yul\":919:925   */\n      dup3\n        /* \"#utility.yul\":914:917   */\n      dup3\n        /* \"#utility.yul\":907:926   */\n      mstore\n        /* \"#utility.yul\":959:963   */\n      0x20\n        /* \"#utility.yul\":954:957   */\n      dup3\n        /* \"#utility.yul\":950:964   */\n      add\n        /* \"#utility.yul\":935:964   */\n      swap1\n      pop\n        /* \"#utility.yul\":801:970   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":976:1283   */\n    tag_30:\n        /* \"#utility.yul\":1044:1045   */\n      0x00\n        /* \"#utility.yul\":1054:1167   */\n    tag_38:\n        /* \"#utility.yul\":1068:1074   */\n      dup4\n        /* \"#utility.yul\":1065:1066   */\n      dup2\n        /* \"#utility.yul\":1062:1075   */\n      lt\n        /* \"#utility.yul\":1054:1167   */\n      iszero\n      tag_40\n      jumpi\n        /* \"#utility.yul\":1153:1154   */\n      dup1\n        /* \"#utility.yul\":1148:1151   */\n      dup3\n        /* \"#utility.yul\":1144:1155   */\n      add\n        /* \"#utility.yul\":1138:1156   */\n      mload\n        /* \"#utility.yul\":1134:1135   */\n      dup2\n        /* \"#utility.yul\":1129:1132   */\n      dup5\n        /* \"#utility.yul\":1125:1136   */\n      add\n        /* \"#utility.yul\":1118:1157   */\n      mstore\n        /* \"#utility.yul\":1090:1092   */\n      0x20\n        /* \"#utility.yul\":1087:1088   */\n      dup2\n        /* \"#utility.yul\":1083:1093   */\n      add\n        /* \"#utility.yul\":1078:1093   */\n      swap1\n      pop\n        /* \"#utility.yul\":1054:1167   */\n      jump(tag_38)\n    tag_40:\n        /* \"#utility.yul\":1185:1191   */\n      dup4\n        /* \"#utility.yul\":1182:1183   */\n      dup2\n        /* \"#utility.yul\":1179:1192   */\n      gt\n        /* \"#utility.yul\":1176:1277   */\n      iszero\n      tag_41\n      jumpi\n        /* \"#utility.yul\":1265:1266   */\n      0x00\n        /* \"#utility.yul\":1256:1262   */\n      dup5\n        /* \"#utility.yul\":1251:1254   */\n      dup5\n        /* \"#utility.yul\":1247:1263   */\n      add\n        /* \"#utility.yul\":1240:1267   */\n      mstore\n        /* \"#utility.yul\":1176:1277   */\n    tag_41:\n        /* \"#utility.yul\":1025:1283   */\n      pop\n        /* \"#utility.yul\":976:1283   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1289:1469   */\n    tag_14:\n        /* \"#utility.yul\":1337:1414   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1334:1335   */\n      0x00\n        /* \"#utility.yul\":1327:1415   */\n      mstore\n        /* \"#utility.yul\":1434:1438   */\n      0x21\n        /* \"#utility.yul\":1431:1432   */\n      0x04\n        /* \"#utility.yul\":1424:1439   */\n      mstore\n        /* \"#utility.yul\":1458:1462   */\n      0x24\n        /* \"#utility.yul\":1455:1456   */\n      0x00\n        /* \"#utility.yul\":1448:1463   */\n      revert\n        /* \"#utility.yul\":1475:1577   */\n    tag_32:\n        /* \"#utility.yul\":1516:1522   */\n      0x00\n        /* \"#utility.yul\":1567:1569   */\n      0x1f\n        /* \"#utility.yul\":1563:1570   */\n      not\n        /* \"#utility.yul\":1558:1560   */\n      0x1f\n        /* \"#utility.yul\":1551:1556   */\n      dup4\n        /* \"#utility.yul\":1547:1561   */\n      add\n        /* \"#utility.yul\":1543:1571   */\n      and\n        /* \"#utility.yul\":1533:1571   */\n      swap1\n      pop\n        /* \"#utility.yul\":1475:1577   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122041ae0aebb659bce0e50243fea6883f719661db7d0b4dbe90548b92c879c4f1de64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610264806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063b1a0c19f1461003b578063f303d10f14610059575b600080fd5b610043610063565b604051610050919061017d565b60405180910390f35b610061610118565b005b606060016002811115610079576100786101ee565b5b60008054906101000a900460ff166002811115610099576100986101ee565b5b14156100dc576040518060400160405280601b81526020017f54686973206973207468652072696768742063686f69636521212100000000008152509050610115565b6040518060400160405280601c81526020017f4e6f206f746865722063686f696365206973206e65656465642121210000000081525090505b90565b60016000806101000a81548160ff0219169083600281111561013d5761013c6101ee565b5b0217905550565b600061014f8261019f565b61015981856101aa565b93506101698185602086016101bb565b6101728161021d565b840191505092915050565b600060208201905081810360008301526101978184610144565b905092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156101d95780820151818401526020810190506101be565b838111156101e8576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000601f19601f830116905091905056fea264697066735822122041ae0aebb659bce0e50243fea6883f719661db7d0b4dbe90548b92c879c4f1de64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x264 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB1A0C19F EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xF303D10F EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x17D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61 PUSH2 0x118 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x79 JUMPI PUSH2 0x78 PUSH2 0x1EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x99 JUMPI PUSH2 0x98 PUSH2 0x1EE JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0xDC JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x54686973206973207468652072696768742063686F6963652121210000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x115 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E6F206F746865722063686F696365206973206E656564656421212100000000 DUP2 MSTORE POP SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x13D JUMPI PUSH2 0x13C PUSH2 0x1EE JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14F DUP3 PUSH2 0x19F JUMP JUMPDEST PUSH2 0x159 DUP2 DUP6 PUSH2 0x1AA JUMP JUMPDEST SWAP4 POP PUSH2 0x169 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1BB JUMP JUMPDEST PUSH2 0x172 DUP2 PUSH2 0x21D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x197 DUP2 DUP5 PUSH2 0x144 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1BE JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1E8 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE 0xAE EXP 0xEB 0xB6 MSIZE 0xBC 0xE0 0xE5 MUL NUMBER INVALID 0xA6 DUP9 EXTCODEHASH PUSH18 0x9661DB7D0B4DBE90548B92C879C4F1DE6473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "67:504:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@changeSize_22": {
									"entryPoint": 280,
									"id": 22,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@checkSize_38": {
									"entryPoint": 99,
									"id": 38,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 324,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 381,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 415,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 426,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 443,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 494,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 541,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1580:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "99:272:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "109:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "156:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "123:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "123:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "113:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "171:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "237:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "242:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "178:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "178:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "171:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "284:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "291:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "280:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "280:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "298:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "303:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "258:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "258:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "258:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "319:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "330:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "357:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "335:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "335:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "319:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "80:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "87:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "95:3:1",
														"type": ""
													}
												],
												"src": "7:364:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "495:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "505:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "517:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "528:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "513:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "505:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "552:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "563:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "548:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "548:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "571:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "577:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "567:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "567:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "541:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "541:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "541:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "597:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "669:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "678:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "605:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "605:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "597:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "467:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "479:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "490:4:1",
														"type": ""
													}
												],
												"src": "377:313:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "755:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "766:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "782:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "776:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "776:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "766:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "738:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "748:6:1",
														"type": ""
													}
												],
												"src": "696:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "897:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "914:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "919:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "907:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "907:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "907:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "935:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "954:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "959:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "950:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "950:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "935:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "869:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "874:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "885:11:1",
														"type": ""
													}
												],
												"src": "801:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1025:258:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1035:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1044:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1039:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1104:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1129:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1134:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1125:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1125:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1148:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1153:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1144:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1144:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1138:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1138:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1118:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1118:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1118:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1065:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1068:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1062:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1062:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1076:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1078:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1087:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1090:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1083:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1083:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1078:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1058:3:1",
																"statements": []
															},
															"src": "1054:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1201:76:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1251:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "1256:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1247:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1247:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1265:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1240:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1240:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1240:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1182:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1185:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1179:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1179:13:1"
															},
															"nodeType": "YulIf",
															"src": "1176:101:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1007:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1012:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1017:6:1",
														"type": ""
													}
												],
												"src": "976:307:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1317:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1334:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1337:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1327:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1327:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1327:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1431:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1434:4:1",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1424:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1424:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1424:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1455:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1458:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1448:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1448:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1448:15:1"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "1289:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1523:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1533:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1551:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1558:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1547:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1547:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1567:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1563:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1563:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1543:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1543:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1533:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1506:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1516:6:1",
														"type": ""
													}
												],
												"src": "1475:102:1"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063b1a0c19f1461003b578063f303d10f14610059575b600080fd5b610043610063565b604051610050919061017d565b60405180910390f35b610061610118565b005b606060016002811115610079576100786101ee565b5b60008054906101000a900460ff166002811115610099576100986101ee565b5b14156100dc576040518060400160405280601b81526020017f54686973206973207468652072696768742063686f69636521212100000000008152509050610115565b6040518060400160405280601c81526020017f4e6f206f746865722063686f696365206973206e65656465642121210000000081525090505b90565b60016000806101000a81548160ff0219169083600281111561013d5761013c6101ee565b5b0217905550565b600061014f8261019f565b61015981856101aa565b93506101698185602086016101bb565b6101728161021d565b840191505092915050565b600060208201905081810360008301526101978184610144565b905092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156101d95780820151818401526020810190506101be565b838111156101e8576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000601f19601f830116905091905056fea264697066735822122041ae0aebb659bce0e50243fea6883f719661db7d0b4dbe90548b92c879c4f1de64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB1A0C19F EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xF303D10F EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x17D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61 PUSH2 0x118 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x79 JUMPI PUSH2 0x78 PUSH2 0x1EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x99 JUMPI PUSH2 0x98 PUSH2 0x1EE JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0xDC JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x54686973206973207468652072696768742063686F6963652121210000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x115 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E6F206F746865722063686F696365206973206E656564656421212100000000 DUP2 MSTORE POP SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x13D JUMPI PUSH2 0x13C PUSH2 0x1EE JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14F DUP3 PUSH2 0x19F JUMP JUMPDEST PUSH2 0x159 DUP2 DUP6 PUSH2 0x1AA JUMP JUMPDEST SWAP4 POP PUSH2 0x169 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1BB JUMP JUMPDEST PUSH2 0x172 DUP2 PUSH2 0x21D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x197 DUP2 DUP5 PUSH2 0x144 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1BE JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1E8 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE 0xAE EXP 0xEB 0xB6 MSIZE 0xBC 0xE0 0xE5 MUL NUMBER INVALID 0xA6 DUP9 EXTCODEHASH PUSH18 0x9661DB7D0B4DBE90548B92C879C4F1DE6473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "67:504:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;344:225;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;268:70;;;:::i;:::-;;344:225;385:13;208:16;413:21;;;;;;;;:::i;:::-;;:6;;;;;;;;;;:21;;;;;;;;:::i;:::-;;;410:153;;;449:36;;;;;;;;;;;;;;;;;;;;;410:153;515:37;;;;;;;;;;;;;;;;;;;344:225;;:::o;268:70::-;315:16;306:6;;:25;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;268:70::o;7:364:1:-;95:3;123:39;156:5;123:39;:::i;:::-;178:71;242:6;237:3;178:71;:::i;:::-;171:78;;258:52;303:6;298:3;291:4;284:5;280:16;258:52;:::i;:::-;335:29;357:6;335:29;:::i;:::-;330:3;326:39;319:46;;99:272;7:364;;;;:::o;377:313::-;490:4;528:2;517:9;513:18;505:26;;577:9;571:4;567:20;563:1;552:9;548:17;541:47;605:78;678:4;669:6;605:78;:::i;:::-;597:86;;377:313;;;;:::o;696:99::-;748:6;782:5;776:12;766:22;;696:99;;;:::o;801:169::-;885:11;919:6;914:3;907:19;959:4;954:3;950:14;935:29;;801:169;;;;:::o;976:307::-;1044:1;1054:113;1068:6;1065:1;1062:13;1054:113;;;1153:1;1148:3;1144:11;1138:18;1134:1;1129:3;1125:11;1118:39;1090:2;1087:1;1083:10;1078:15;;1054:113;;;1185:6;1182:1;1179:13;1176:101;;;1265:1;1256:6;1251:3;1247:16;1240:27;1176:101;1025:258;976:307;;;:::o;1289:180::-;1337:77;1334:1;1327:88;1434:4;1431:1;1424:15;1458:4;1455:1;1448:15;1475:102;1516:6;1567:2;1563:7;1558:2;1551:5;1547:14;1543:28;1533:38;;1475:102;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "122400",
								"executionCost": "171",
								"totalCost": "122571"
							},
							"external": {
								"changeSize()": "24431",
								"checkSize()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 67,
									"end": 571,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 67,
									"end": 571,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 571,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 67,
									"end": 571,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 67,
									"end": 571,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 67,
									"end": 571,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 67,
									"end": 571,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 67,
									"end": 571,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 67,
									"end": 571,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 67,
									"end": 571,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 67,
									"end": 571,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 67,
									"end": 571,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 67,
									"end": 571,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 67,
									"end": 571,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 67,
									"end": 571,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 67,
									"end": 571,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 67,
									"end": 571,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 67,
									"end": 571,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 67,
									"end": 571,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 67,
									"end": 571,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 67,
									"end": 571,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122041ae0aebb659bce0e50243fea6883f719661db7d0b4dbe90548b92c879c4f1de64736f6c63430008070033",
									".code": [
										{
											"begin": 67,
											"end": 571,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 67,
											"end": 571,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 571,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 67,
											"end": 571,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 67,
											"end": 571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67,
											"end": 571,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 67,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 67,
											"end": 571,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 67,
											"end": 571,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 67,
											"end": 571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67,
											"end": 571,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 67,
											"end": 571,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 67,
											"end": 571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67,
											"end": 571,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 67,
											"end": 571,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 67,
											"end": 571,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 67,
											"end": 571,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 67,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 67,
											"end": 571,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 67,
											"end": 571,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 67,
											"end": 571,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 67,
											"end": 571,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 67,
											"end": 571,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 67,
											"end": 571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67,
											"end": 571,
											"name": "PUSH",
											"source": 0,
											"value": "B1A0C19F"
										},
										{
											"begin": 67,
											"end": 571,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 67,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 67,
											"end": 571,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 67,
											"end": 571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67,
											"end": 571,
											"name": "PUSH",
											"source": 0,
											"value": "F303D10F"
										},
										{
											"begin": 67,
											"end": 571,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 67,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 67,
											"end": 571,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 67,
											"end": 571,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 67,
											"end": 571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67,
											"end": 571,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 67,
											"end": 571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67,
											"end": 571,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 344,
											"end": 569,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 344,
											"end": 569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 344,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 344,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 344,
											"end": 569,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 344,
											"end": 569,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 344,
											"end": 569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 344,
											"end": 569,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 344,
											"end": 569,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 344,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 344,
											"end": 569,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 344,
											"end": 569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 344,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 344,
											"end": 569,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 344,
											"end": 569,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 344,
											"end": 569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 344,
											"end": 569,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 344,
											"end": 569,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 344,
											"end": 569,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 344,
											"end": 569,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 344,
											"end": 569,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 344,
											"end": 569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 344,
											"end": 569,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 268,
											"end": 338,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 268,
											"end": 338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 268,
											"end": 338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 268,
											"end": 338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 268,
											"end": 338,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 268,
											"end": 338,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 268,
											"end": 338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 268,
											"end": 338,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 344,
											"end": 569,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 344,
											"end": 569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 385,
											"end": 398,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 208,
											"end": 224,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 413,
											"end": 434,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 413,
											"end": 434,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 413,
											"end": 434,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 413,
											"end": 434,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 413,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 413,
											"end": 434,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 413,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 413,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 413,
											"end": 434,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 413,
											"end": 434,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 413,
											"end": 434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 413,
											"end": 434,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 413,
											"end": 434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 413,
											"end": 419,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 413,
											"end": 419,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 413,
											"end": 419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 413,
											"end": 419,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 413,
											"end": 419,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 413,
											"end": 419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 413,
											"end": 419,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 413,
											"end": 419,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 413,
											"end": 419,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 413,
											"end": 434,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 413,
											"end": 434,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 413,
											"end": 434,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 413,
											"end": 434,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 413,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 413,
											"end": 434,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 413,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 413,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 413,
											"end": 434,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 413,
											"end": 434,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 413,
											"end": 434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 413,
											"end": 434,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 413,
											"end": 434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 413,
											"end": 434,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 410,
											"end": 563,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 410,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 410,
											"end": 563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 449,
											"end": 485,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 449,
											"end": 485,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 449,
											"end": 485,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 449,
											"end": 485,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 449,
											"end": 485,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 449,
											"end": 485,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 449,
											"end": 485,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 449,
											"end": 485,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 449,
											"end": 485,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 449,
											"end": 485,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 449,
											"end": 485,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 449,
											"end": 485,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 449,
											"end": 485,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 449,
											"end": 485,
											"name": "PUSH",
											"source": 0,
											"value": "54686973206973207468652072696768742063686F6963652121210000000000"
										},
										{
											"begin": 449,
											"end": 485,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 449,
											"end": 485,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 449,
											"end": 485,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 449,
											"end": 485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 449,
											"end": 485,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 449,
											"end": 485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 449,
											"end": 485,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 410,
											"end": 563,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 410,
											"end": 563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 515,
											"end": 552,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 515,
											"end": 552,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 515,
											"end": 552,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 515,
											"end": 552,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 515,
											"end": 552,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 515,
											"end": 552,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 515,
											"end": 552,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 515,
											"end": 552,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 515,
											"end": 552,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 515,
											"end": 552,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 515,
											"end": 552,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 515,
											"end": 552,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 515,
											"end": 552,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 515,
											"end": 552,
											"name": "PUSH",
											"source": 0,
											"value": "4E6F206F746865722063686F696365206973206E656564656421212100000000"
										},
										{
											"begin": 515,
											"end": 552,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 515,
											"end": 552,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 515,
											"end": 552,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 515,
											"end": 552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 515,
											"end": 552,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 344,
											"end": 569,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 344,
											"end": 569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 344,
											"end": 569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 344,
											"end": 569,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 268,
											"end": 338,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 268,
											"end": 338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 315,
											"end": 331,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 306,
											"end": 312,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 306,
											"end": 331,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 306,
											"end": 331,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 306,
											"end": 331,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 306,
											"end": 331,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 306,
											"end": 331,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 306,
											"end": 331,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 306,
											"end": 331,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 306,
											"end": 331,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 306,
											"end": 331,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 306,
											"end": 331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 306,
											"end": 331,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 306,
											"end": 331,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 306,
											"end": 331,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 306,
											"end": 331,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 306,
											"end": 331,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 306,
											"end": 331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 306,
											"end": 331,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 306,
											"end": 331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 306,
											"end": 331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 306,
											"end": 331,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 306,
											"end": 331,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 306,
											"end": 331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 306,
											"end": 331,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 306,
											"end": 331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 306,
											"end": 331,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 306,
											"end": 331,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 306,
											"end": 331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 306,
											"end": 331,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 306,
											"end": 331,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 268,
											"end": 338,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 371,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 7,
											"end": 371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 95,
											"end": 98,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 156,
											"end": 161,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 123,
											"end": 162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 123,
											"end": 162,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 123,
											"end": 162,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 123,
											"end": 162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 178,
											"end": 249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 242,
											"end": 248,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 237,
											"end": 240,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 178,
											"end": 249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 178,
											"end": 249,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 178,
											"end": 249,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 178,
											"end": 249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 171,
											"end": 249,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 171,
											"end": 249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 258,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 303,
											"end": 309,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 298,
											"end": 301,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 291,
											"end": 295,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 284,
											"end": 289,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 280,
											"end": 296,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 258,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 258,
											"end": 310,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 258,
											"end": 310,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 258,
											"end": 310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 335,
											"end": 364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 357,
											"end": 363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 335,
											"end": 364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 335,
											"end": 364,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 335,
											"end": 364,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 335,
											"end": 364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 330,
											"end": 333,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 326,
											"end": 365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 319,
											"end": 365,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 319,
											"end": 365,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 99,
											"end": 371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 371,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 371,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 377,
											"end": 690,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 377,
											"end": 690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 494,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 517,
											"end": 526,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 505,
											"end": 531,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 505,
											"end": 531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 577,
											"end": 586,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 571,
											"end": 575,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 567,
											"end": 587,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 563,
											"end": 564,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 552,
											"end": 561,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 548,
											"end": 565,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 541,
											"end": 588,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 605,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 678,
											"end": 682,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 669,
											"end": 675,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 605,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 605,
											"end": 683,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 605,
											"end": 683,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 605,
											"end": 683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 597,
											"end": 683,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 597,
											"end": 683,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 377,
											"end": 690,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 377,
											"end": 690,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 377,
											"end": 690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 377,
											"end": 690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 377,
											"end": 690,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 696,
											"end": 795,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 696,
											"end": 795,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 748,
											"end": 754,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 782,
											"end": 787,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 776,
											"end": 788,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 766,
											"end": 788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 766,
											"end": 788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 795,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 696,
											"end": 795,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 696,
											"end": 795,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 795,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 801,
											"end": 970,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 801,
											"end": 970,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 885,
											"end": 896,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 919,
											"end": 925,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 914,
											"end": 917,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 907,
											"end": 926,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 959,
											"end": 963,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 954,
											"end": 957,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 950,
											"end": 964,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 935,
											"end": 964,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 935,
											"end": 964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 801,
											"end": 970,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 801,
											"end": 970,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 801,
											"end": 970,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 801,
											"end": 970,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 801,
											"end": 970,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 976,
											"end": 1283,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 976,
											"end": 1283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1044,
											"end": 1045,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1054,
											"end": 1167,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1054,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1074,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1066,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1062,
											"end": 1075,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1054,
											"end": 1167,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1054,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1054,
											"end": 1167,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1153,
											"end": 1154,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1148,
											"end": 1151,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1155,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1138,
											"end": 1156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1135,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1129,
											"end": 1132,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1136,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1157,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1092,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1087,
											"end": 1088,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1093,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1093,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1054,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1054,
											"end": 1167,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1054,
											"end": 1167,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1054,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1185,
											"end": 1191,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1182,
											"end": 1183,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1277,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1176,
											"end": 1277,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1265,
											"end": 1266,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1256,
											"end": 1262,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1251,
											"end": 1254,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1247,
											"end": 1263,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1267,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1277,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1176,
											"end": 1277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 976,
											"end": 1283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 976,
											"end": 1283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 976,
											"end": 1283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 976,
											"end": 1283,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1289,
											"end": 1469,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1289,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1337,
											"end": 1414,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1334,
											"end": 1335,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1327,
											"end": 1415,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1434,
											"end": 1438,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1431,
											"end": 1432,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1424,
											"end": 1439,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1462,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1455,
											"end": 1456,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1448,
											"end": 1463,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1475,
											"end": 1577,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1475,
											"end": 1577,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1522,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1567,
											"end": 1569,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1563,
											"end": 1570,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1558,
											"end": 1560,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1551,
											"end": 1556,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1547,
											"end": 1561,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1543,
											"end": 1571,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1533,
											"end": 1571,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1533,
											"end": 1571,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1475,
											"end": 1577,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1475,
											"end": 1577,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1475,
											"end": 1577,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1475,
											"end": 1577,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"changeSize()": "f303d10f",
							"checkSize()": "b1a0c19f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"changeSize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkSize\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solidity practice/enums.sol\":\"EnumLearning\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"solidity practice/enums.sol\":{\"keccak256\":\"0xa3ec86fd5089bb0e7125d3723bc7cd9c14e20446418258a48a6f2043adba990f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://718b28204a63f3b027168d9da0506870cd6c4406352823a41f482bd961f98750\",\"dweb:/ipfs/QmWsnB5vpJ8knv5v2zcJxpnBp76wxqPtZEgxCpiVCP2oCz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "solidity practice/enums.sol:EnumLearning",
								"label": "choice",
								"offset": 0,
								"slot": "0",
								"type": "t_enum(PizzaSize)5"
							}
						],
						"types": {
							"t_enum(PizzaSize)5": {
								"encoding": "inplace",
								"label": "enum EnumLearning.PizzaSize",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"solidity practice/enums.sol": {
				"ast": {
					"absolutePath": "solidity practice/enums.sol",
					"exportedSymbols": {
						"EnumLearning": [
							39
						]
					},
					"id": 40,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:30:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 39,
							"linearizedBaseContracts": [
								39
							],
							"name": "EnumLearning",
							"nameLocation": "76:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EnumLearning.PizzaSize",
									"id": 5,
									"members": [
										{
											"id": 2,
											"name": "LARGER",
											"nameLocation": "118:6:0",
											"nodeType": "EnumValue",
											"src": "118:6:0"
										},
										{
											"id": 3,
											"name": "MEDIUM",
											"nameLocation": "126:6:0",
											"nodeType": "EnumValue",
											"src": "126:6:0"
										},
										{
											"id": 4,
											"name": "SMALL",
											"nameLocation": "134:5:0",
											"nodeType": "EnumValue",
											"src": "134:5:0"
										}
									],
									"name": "PizzaSize",
									"nameLocation": "99:9:0",
									"nodeType": "EnumDefinition",
									"src": "94:51:0"
								},
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "choice",
									"nameLocation": "161:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 39,
									"src": "151:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_PizzaSize_$5",
										"typeString": "enum EnumLearning.PizzaSize"
									},
									"typeName": {
										"id": 7,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 6,
											"name": "PizzaSize",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 5,
											"src": "151:9:0"
										},
										"referencedDeclaration": 5,
										"src": "151:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_PizzaSize_$5",
											"typeString": "enum EnumLearning.PizzaSize"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 13,
									"mutability": "constant",
									"name": "defaultChoice",
									"nameLocation": "192:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 39,
									"src": "173:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_PizzaSize_$5",
										"typeString": "enum EnumLearning.PizzaSize"
									},
									"typeName": {
										"id": 10,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 9,
											"name": "PizzaSize",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 5,
											"src": "173:9:0"
										},
										"referencedDeclaration": 5,
										"src": "173:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_PizzaSize_$5",
											"typeString": "enum EnumLearning.PizzaSize"
										}
									},
									"value": {
										"expression": {
											"id": 11,
											"name": "PizzaSize",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 5,
											"src": "208:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_enum$_PizzaSize_$5_$",
												"typeString": "type(enum EnumLearning.PizzaSize)"
											}
										},
										"id": 12,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"memberName": "MEDIUM",
										"nodeType": "MemberAccess",
										"referencedDeclaration": 3,
										"src": "208:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_PizzaSize_$5",
											"typeString": "enum EnumLearning.PizzaSize"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 21,
										"nodeType": "Block",
										"src": "296:42:0",
										"statements": [
											{
												"expression": {
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 16,
														"name": "choice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "306:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_PizzaSize_$5",
															"typeString": "enum EnumLearning.PizzaSize"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 17,
															"name": "PizzaSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "315:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_PizzaSize_$5_$",
																"typeString": "type(enum EnumLearning.PizzaSize)"
															}
														},
														"id": 18,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "MEDIUM",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "315:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_PizzaSize_$5",
															"typeString": "enum EnumLearning.PizzaSize"
														}
													},
													"src": "306:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_PizzaSize_$5",
														"typeString": "enum EnumLearning.PizzaSize"
													}
												},
												"id": 20,
												"nodeType": "ExpressionStatement",
												"src": "306:25:0"
											}
										]
									},
									"functionSelector": "f303d10f",
									"id": 22,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeSize",
									"nameLocation": "277:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "287:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "296:0:0"
									},
									"scope": 39,
									"src": "268:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "399:170:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_PizzaSize_$5",
														"typeString": "enum EnumLearning.PizzaSize"
													},
													"id": 29,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 27,
														"name": "choice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "413:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_PizzaSize_$5",
															"typeString": "enum EnumLearning.PizzaSize"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 28,
														"name": "defaultChoice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "421:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_PizzaSize_$5",
															"typeString": "enum EnumLearning.PizzaSize"
														}
													},
													"src": "413:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 35,
													"nodeType": "Block",
													"src": "501:62:0",
													"statements": [
														{
															"expression": {
																"hexValue": "4e6f206f746865722063686f696365206973206e6565646564212121",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "522:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_aab8abf1f13e85a03967dac40e3b91a1f7f6de3a23fbc41daa8f6d3f6826f128",
																	"typeString": "literal_string \"No other choice is needed!!!\""
																},
																"value": "No other choice is needed!!!"
															},
															"functionReturnParameters": 26,
															"id": 34,
															"nodeType": "Return",
															"src": "515:37:0"
														}
													]
												},
												"id": 36,
												"nodeType": "IfStatement",
												"src": "410:153:0",
												"trueBody": {
													"id": 32,
													"nodeType": "Block",
													"src": "435:62:0",
													"statements": [
														{
															"expression": {
																"hexValue": "54686973206973207468652072696768742063686f696365212121",
																"id": 30,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "456:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_0b28e2f01a4382f8163e34e3f2ea3174751c77e192018e1a086be24ef090b8e7",
																	"typeString": "literal_string \"This is the right choice!!!\""
																},
																"value": "This is the right choice!!!"
															},
															"functionReturnParameters": 26,
															"id": 31,
															"nodeType": "Return",
															"src": "449:36:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "b1a0c19f",
									"id": 38,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkSize",
									"nameLocation": "353:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "362:2:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "385:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 24,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "385:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "384:15:0"
									},
									"scope": 39,
									"src": "344:225:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 40,
							"src": "67:504:0",
							"usedErrors": []
						}
					],
					"src": "35:536:0"
				},
				"id": 0
			}
		}
	}
}