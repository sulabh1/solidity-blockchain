{
	"id": "1f0b36e229256eff956cf5061fe76987",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"solidity practice/constructor.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.7.0<0.9.0;\n\ncontract ConstructorFunc{\n    //state variable\n    uint public count;\n    constructor(uint newCount){\n        count=newCount;\n\n    }\n    function increaseCount() public {\n        count++;\n    }\n    function getCount() public returns(uint){\n        if(count>20){\n            count=0;\n            return 0;\n        }else if(count<20){\n            count=1;\n            return 1;\n        }else{\n            return count;\n        }\n       \n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"solidity practice/constructor.sol": {
				"ConstructorFunc": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newCount",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "count",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "increaseCount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"solidity practice/constructor.sol\":69:511  contract ConstructorFunc{... */\n  mstore(0x40, 0x80)\n    /* \"solidity practice/constructor.sol\":143:201  constructor(uint newCount){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"solidity practice/constructor.sol\":185:193  newCount */\n  dup1\n    /* \"solidity practice/constructor.sol\":179:184  count */\n  0x00\n    /* \"solidity practice/constructor.sol\":179:193  count=newCount */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"solidity practice/constructor.sol\":143:201  constructor(uint newCount){... */\n  pop\n    /* \"solidity practice/constructor.sol\":69:511  contract ConstructorFunc{... */\n  jump(tag_6)\n    /* \"#utility.yul\":7:150   */\ntag_8:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_10\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:507   */\ntag_3:\n    /* \"#utility.yul\":226:232   */\n  0x00\n    /* \"#utility.yul\":275:277   */\n  0x20\n    /* \"#utility.yul\":263:272   */\n  dup3\n    /* \"#utility.yul\":254:261   */\n  dup5\n    /* \"#utility.yul\":250:273   */\n  sub\n    /* \"#utility.yul\":246:278   */\n  slt\n    /* \"#utility.yul\":243:362   */\n  iszero\n  tag_13\n  jumpi\n    /* \"#utility.yul\":281:360   */\n  tag_14\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":243:362   */\ntag_13:\n    /* \"#utility.yul\":401:402   */\n  0x00\n    /* \"#utility.yul\":426:490   */\n  tag_16\n    /* \"#utility.yul\":482:489   */\n  dup5\n    /* \"#utility.yul\":473:479   */\n  dup3\n    /* \"#utility.yul\":462:471   */\n  dup6\n    /* \"#utility.yul\":458:480   */\n  add\n    /* \"#utility.yul\":426:490   */\n  tag_8\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":416:490   */\n  swap2\n  pop\n    /* \"#utility.yul\":372:500   */\n  pop\n    /* \"#utility.yul\":156:507   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":594:671   */\ntag_19:\n    /* \"#utility.yul\":631:638   */\n  0x00\n    /* \"#utility.yul\":660:665   */\n  dup2\n    /* \"#utility.yul\":649:665   */\n  swap1\n  pop\n    /* \"#utility.yul\":594:671   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":800:917   */\ntag_15:\n    /* \"#utility.yul\":909:910   */\n  0x00\n    /* \"#utility.yul\":906:907   */\n  dup1\n    /* \"#utility.yul\":899:911   */\n  revert\n    /* \"#utility.yul\":923:1045   */\ntag_11:\n    /* \"#utility.yul\":996:1020   */\n  tag_25\n    /* \"#utility.yul\":1014:1019   */\n  dup2\n    /* \"#utility.yul\":996:1020   */\n  tag_19\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":989:994   */\n  dup2\n    /* \"#utility.yul\":986:1021   */\n  eq\n    /* \"#utility.yul\":976:1039   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":1035:1036   */\n  0x00\n    /* \"#utility.yul\":1032:1033   */\n  dup1\n    /* \"#utility.yul\":1025:1037   */\n  revert\n    /* \"#utility.yul\":976:1039   */\ntag_26:\n    /* \"#utility.yul\":923:1045   */\n  pop\n  jump\t// out\n    /* \"solidity practice/constructor.sol\":69:511  contract ConstructorFunc{... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"solidity practice/constructor.sol\":69:511  contract ConstructorFunc{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x06661abd\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xa87d942c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xabd1b73d\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"solidity practice/constructor.sol\":120:137  uint public count */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"solidity practice/constructor.sol\":267:509  function getCount() public returns(uint){... */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"solidity practice/constructor.sol\":206:262  function increaseCount() public {... */\n    tag_5:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      stop\n        /* \"solidity practice/constructor.sol\":120:137  uint public count */\n    tag_7:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"solidity practice/constructor.sol\":267:509  function getCount() public returns(uint){... */\n    tag_11:\n        /* \"solidity practice/constructor.sol\":302:306  uint */\n      0x00\n        /* \"solidity practice/constructor.sol\":326:328  20 */\n      0x14\n        /* \"solidity practice/constructor.sol\":320:325  count */\n      sload(0x00)\n        /* \"solidity practice/constructor.sol\":320:328  count>20 */\n      gt\n        /* \"solidity practice/constructor.sol\":317:495  if(count>20){... */\n      iszero\n      tag_16\n      jumpi\n        /* \"solidity practice/constructor.sol\":349:350  0 */\n      0x00\n        /* \"solidity practice/constructor.sol\":343:348  count */\n      dup1\n        /* \"solidity practice/constructor.sol\":343:350  count=0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"solidity practice/constructor.sol\":371:372  0 */\n      0x00\n        /* \"solidity practice/constructor.sol\":364:372  return 0 */\n      swap1\n      pop\n      jump(tag_15)\n        /* \"solidity practice/constructor.sol\":317:495  if(count>20){... */\n    tag_16:\n        /* \"solidity practice/constructor.sol\":397:399  20 */\n      0x14\n        /* \"solidity practice/constructor.sol\":391:396  count */\n      sload(0x00)\n        /* \"solidity practice/constructor.sol\":391:399  count<20 */\n      lt\n        /* \"solidity practice/constructor.sol\":388:495  if(count<20){... */\n      iszero\n      tag_18\n      jumpi\n        /* \"solidity practice/constructor.sol\":420:421  1 */\n      0x01\n        /* \"solidity practice/constructor.sol\":414:419  count */\n      0x00\n        /* \"solidity practice/constructor.sol\":414:421  count=1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"solidity practice/constructor.sol\":442:443  1 */\n      0x01\n        /* \"solidity practice/constructor.sol\":435:443  return 1 */\n      swap1\n      pop\n      jump(tag_15)\n        /* \"solidity practice/constructor.sol\":388:495  if(count<20){... */\n    tag_18:\n        /* \"solidity practice/constructor.sol\":479:484  count */\n      sload(0x00)\n        /* \"solidity practice/constructor.sol\":472:484  return count */\n      swap1\n      pop\n        /* \"solidity practice/constructor.sol\":267:509  function getCount() public returns(uint){... */\n    tag_15:\n      swap1\n      jump\t// out\n        /* \"solidity practice/constructor.sol\":206:262  function increaseCount() public {... */\n    tag_14:\n        /* \"solidity practice/constructor.sol\":248:253  count */\n      0x00\n      dup1\n        /* \"solidity practice/constructor.sol\":248:255  count++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_21\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"solidity practice/constructor.sol\":206:262  function increaseCount() public {... */\n      jump\t// out\n        /* \"#utility.yul\":7:125   */\n    tag_24:\n        /* \"#utility.yul\":94:118   */\n      tag_26\n        /* \"#utility.yul\":112:117   */\n      dup2\n        /* \"#utility.yul\":94:118   */\n      tag_27\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":89:92   */\n      dup3\n        /* \"#utility.yul\":82:119   */\n      mstore\n        /* \"#utility.yul\":7:125   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":131:353   */\n    tag_9:\n        /* \"#utility.yul\":224:228   */\n      0x00\n        /* \"#utility.yul\":262:264   */\n      0x20\n        /* \"#utility.yul\":251:260   */\n      dup3\n        /* \"#utility.yul\":247:265   */\n      add\n        /* \"#utility.yul\":239:265   */\n      swap1\n      pop\n        /* \"#utility.yul\":275:346   */\n      tag_29\n        /* \"#utility.yul\":343:344   */\n      0x00\n        /* \"#utility.yul\":332:341   */\n      dup4\n        /* \"#utility.yul\":328:345   */\n      add\n        /* \"#utility.yul\":319:325   */\n      dup5\n        /* \"#utility.yul\":275:346   */\n      tag_24\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":131:353   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":359:436   */\n    tag_27:\n        /* \"#utility.yul\":396:403   */\n      0x00\n        /* \"#utility.yul\":425:430   */\n      dup2\n        /* \"#utility.yul\":414:430   */\n      swap1\n      pop\n        /* \"#utility.yul\":359:436   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:675   */\n    tag_22:\n        /* \"#utility.yul\":481:484   */\n      0x00\n        /* \"#utility.yul\":504:528   */\n      tag_32\n        /* \"#utility.yul\":522:527   */\n      dup3\n        /* \"#utility.yul\":504:528   */\n      tag_27\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":495:528   */\n      swap2\n      pop\n        /* \"#utility.yul\":550:616   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":543:548   */\n      dup3\n        /* \"#utility.yul\":540:617   */\n      eq\n        /* \"#utility.yul\":537:640   */\n      iszero\n      tag_33\n      jumpi\n        /* \"#utility.yul\":620:638   */\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":537:640   */\n    tag_33:\n        /* \"#utility.yul\":667:668   */\n      0x01\n        /* \"#utility.yul\":660:665   */\n      dup3\n        /* \"#utility.yul\":656:669   */\n      add\n        /* \"#utility.yul\":649:669   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:675   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":681:861   */\n    tag_35:\n        /* \"#utility.yul\":729:806   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":726:727   */\n      0x00\n        /* \"#utility.yul\":719:807   */\n      mstore\n        /* \"#utility.yul\":826:830   */\n      0x11\n        /* \"#utility.yul\":823:824   */\n      0x04\n        /* \"#utility.yul\":816:831   */\n      mstore\n        /* \"#utility.yul\":850:854   */\n      0x24\n        /* \"#utility.yul\":847:848   */\n      0x00\n        /* \"#utility.yul\":840:855   */\n      revert\n\n    auxdata: 0xa26469706673582212207de691bf923ccdae3a96a6bc3dde69cd7cdda7e4c4c653574d5b4ecd138c11ec64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_13": {
									"entryPoint": null,
									"id": 13,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 63,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 84,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 129,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 139,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 144,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1048:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:1",
														"type": ""
													}
												],
												"src": "7:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "233:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "279:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "281:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "281:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "281:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "254:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "263:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "275:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:32:1"
															},
															"nodeType": "YulIf",
															"src": "243:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "372:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "387:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "401:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "391:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "416:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "462:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "473:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "458:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "458:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "482:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "426:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "426:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "416:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:1",
														"type": ""
													}
												],
												"src": "156:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "553:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "563:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "579:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "573:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "573:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "563:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "546:6:1",
														"type": ""
													}
												],
												"src": "513:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "639:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "649:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "660:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "649:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "621:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "631:7:1",
														"type": ""
													}
												],
												"src": "594:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "766:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "783:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "786:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "776:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "776:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "776:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "677:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "889:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "906:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "909:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "899:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "899:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "899:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "800:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "966:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1023:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1032:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1035:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1025:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1025:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1025:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "989:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1014:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "996:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "996:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "986:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "986:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "979:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:43:1"
															},
															"nodeType": "YulIf",
															"src": "976:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "959:5:1",
														"type": ""
													}
												],
												"src": "923:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161028538038061028583398181016040528101906100329190610054565b80600081905550506100a7565b60008151905061004e81610090565b92915050565b60006020828403121561006a5761006961008b565b5b60006100788482850161003f565b91505092915050565b6000819050919050565b600080fd5b61009981610081565b81146100a457600080fd5b50565b6101cf806100b66000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806306661abd14610046578063a87d942c14610064578063abd1b73d14610082575b600080fd5b61004e61008c565b60405161005b91906100fc565b60405180910390f35b61006c610092565b60405161007991906100fc565b60405180910390f35b61008a6100d4565b005b60005481565b6000601460005411156100af5760008081905550600090506100d1565b601460005410156100cb576001600081905550600190506100d1565b60005490505b90565b6000808154809291906100e690610121565b9190505550565b6100f681610117565b82525050565b600060208201905061011160008301846100ed565b92915050565b6000819050919050565b600061012c82610117565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561015f5761015e61016a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212207de691bf923ccdae3a96a6bc3dde69cd7cdda7e4c4c653574d5b4ecd138c11ec64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x285 CODESIZE SUB DUP1 PUSH2 0x285 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x54 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP PUSH2 0xA7 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4E DUP2 PUSH2 0x90 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6A JUMPI PUSH2 0x69 PUSH2 0x8B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x78 DUP5 DUP3 DUP6 ADD PUSH2 0x3F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x99 DUP2 PUSH2 0x81 JUMP JUMPDEST DUP2 EQ PUSH2 0xA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1CF DUP1 PUSH2 0xB6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6661ABD EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xA87D942C EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xABD1B73D EQ PUSH2 0x82 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0xFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C PUSH2 0x92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79 SWAP2 SWAP1 PUSH2 0xFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8A PUSH2 0xD4 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 PUSH1 0x0 SLOAD GT ISZERO PUSH2 0xAF JUMPI PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 SWAP1 POP PUSH2 0xD1 JUMP JUMPDEST PUSH1 0x14 PUSH1 0x0 SLOAD LT ISZERO PUSH2 0xCB JUMPI PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0xD1 JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xE6 SWAP1 PUSH2 0x121 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMP JUMPDEST PUSH2 0xF6 DUP2 PUSH2 0x117 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x111 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12C DUP3 PUSH2 0x117 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x15F JUMPI PUSH2 0x15E PUSH2 0x16A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0xE691BF923CCDAE3A96A6BC3DDE69CD7CDDA7E4C4C653574D5B4ECD138C11 0xEC PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "69:442:0:-:0;;;143:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;185:8;179:5;:14;;;;143:58;69:442;;7:143:1;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:351::-;226:6;275:2;263:9;254:7;250:23;246:32;243:119;;;281:79;;:::i;:::-;243:119;401:1;426:64;482:7;473:6;462:9;458:22;426:64;:::i;:::-;416:74;;372:128;156:351;;;;:::o;594:77::-;631:7;660:5;649:16;;594:77;;;:::o;800:117::-;909:1;906;899:12;923:122;996:24;1014:5;996:24;:::i;:::-;989:5;986:35;976:63;;1035:1;1032;1025:12;976:63;923:122;:::o;69:442:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@count_3": {
									"entryPoint": 140,
									"id": 3,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getCount_51": {
									"entryPoint": 146,
									"id": 51,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@increaseCount_20": {
									"entryPoint": 212,
									"id": 20,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 237,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 252,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 279,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 289,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 362,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:864:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "72:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "89:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "112:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "94:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "94:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "82:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "82:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "60:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "67:3:1",
														"type": ""
													}
												],
												"src": "7:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "229:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "239:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "251:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "262:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "247:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "247:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "239:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "319:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "332:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "343:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "328:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "275:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "275:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "201:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "213:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "224:4:1",
														"type": ""
													}
												],
												"src": "131:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "404:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "414:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "425:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "414:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "386:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "396:7:1",
														"type": ""
													}
												],
												"src": "359:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "485:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "495:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "522:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "504:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "504:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "495:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "618:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "620:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "620:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "620:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "543:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "550:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "540:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "540:77:1"
															},
															"nodeType": "YulIf",
															"src": "537:103:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "649:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "660:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "667:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "656:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "656:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "649:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "471:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "481:3:1",
														"type": ""
													}
												],
												"src": "442:233:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "709:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "726:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "729:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "719:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "719:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "719:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "823:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "826:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "816:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "816:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "816:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "847:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "850:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "840:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "840:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "840:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "681:180:1"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c806306661abd14610046578063a87d942c14610064578063abd1b73d14610082575b600080fd5b61004e61008c565b60405161005b91906100fc565b60405180910390f35b61006c610092565b60405161007991906100fc565b60405180910390f35b61008a6100d4565b005b60005481565b6000601460005411156100af5760008081905550600090506100d1565b601460005410156100cb576001600081905550600190506100d1565b60005490505b90565b6000808154809291906100e690610121565b9190505550565b6100f681610117565b82525050565b600060208201905061011160008301846100ed565b92915050565b6000819050919050565b600061012c82610117565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561015f5761015e61016a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212207de691bf923ccdae3a96a6bc3dde69cd7cdda7e4c4c653574d5b4ecd138c11ec64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6661ABD EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xA87D942C EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xABD1B73D EQ PUSH2 0x82 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0xFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C PUSH2 0x92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79 SWAP2 SWAP1 PUSH2 0xFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8A PUSH2 0xD4 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 PUSH1 0x0 SLOAD GT ISZERO PUSH2 0xAF JUMPI PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 SWAP1 POP PUSH2 0xD1 JUMP JUMPDEST PUSH1 0x14 PUSH1 0x0 SLOAD LT ISZERO PUSH2 0xCB JUMPI PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0xD1 JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xE6 SWAP1 PUSH2 0x121 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMP JUMPDEST PUSH2 0xF6 DUP2 PUSH2 0x117 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x111 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12C DUP3 PUSH2 0x117 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x15F JUMPI PUSH2 0x15E PUSH2 0x16A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0xE691BF923CCDAE3A96A6BC3DDE69CD7CDDA7E4C4C653574D5B4ECD138C11 0xEC PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "69:442:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;120:17;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;267:242;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;206:56;;;:::i;:::-;;120:17;;;;:::o;267:242::-;302:4;326:2;320:5;;:8;317:178;;;349:1;343:5;:7;;;;371:1;364:8;;;;317:178;397:2;391:5;;:8;388:107;;;420:1;414:5;:7;;;;442:1;435:8;;;;388:107;479:5;;472:12;;267:242;;:::o;206:56::-;248:5;;:7;;;;;;;;;:::i;:::-;;;;;;206:56::o;7:118:1:-;94:24;112:5;94:24;:::i;:::-;89:3;82:37;7:118;;:::o;131:222::-;224:4;262:2;251:9;247:18;239:26;;275:71;343:1;332:9;328:17;319:6;275:71;:::i;:::-;131:222;;;;:::o;359:77::-;396:7;425:5;414:16;;359:77;;;:::o;442:233::-;481:3;504:24;522:5;504:24;:::i;:::-;495:33;;550:66;543:5;540:77;537:103;;;620:18;;:::i;:::-;537:103;667:1;660:5;656:13;649:20;;442:233;;;:::o;681:180::-;729:77;726:1;719:88;826:4;823:1;816:15;850:4;847:1;840:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "92600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"count()": "2407",
								"getCount()": "26714",
								"increaseCount()": "24526"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 69,
									"end": 511,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 69,
									"end": 511,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 69,
									"end": 511,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 143,
									"end": 201,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 143,
									"end": 201,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 143,
									"end": 201,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 143,
									"end": 201,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 143,
									"end": 201,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 143,
									"end": 201,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 143,
									"end": 201,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 143,
									"end": 201,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 143,
									"end": 201,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 143,
									"end": 201,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 143,
									"end": 201,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 143,
									"end": 201,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 143,
									"end": 201,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 143,
									"end": 201,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 143,
									"end": 201,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 143,
									"end": 201,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 143,
									"end": 201,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 143,
									"end": 201,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 143,
									"end": 201,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 143,
									"end": 201,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 143,
									"end": 201,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 143,
									"end": 201,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 143,
									"end": 201,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 143,
									"end": 201,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 143,
									"end": 201,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 143,
									"end": 201,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 143,
									"end": 201,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 143,
									"end": 201,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 143,
									"end": 201,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 143,
									"end": 201,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 143,
									"end": 201,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 143,
									"end": 201,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 143,
									"end": 201,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 143,
									"end": 201,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 143,
									"end": 201,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 185,
									"end": 193,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 179,
									"end": 184,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 193,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 179,
									"end": 193,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 179,
									"end": 193,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 179,
									"end": 193,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 143,
									"end": 201,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 69,
									"end": 511,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 69,
									"end": 511,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 226,
									"end": 232,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 277,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 263,
									"end": 272,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 254,
									"end": 261,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 250,
									"end": 273,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 246,
									"end": 278,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 243,
									"end": 362,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 243,
									"end": 362,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 243,
									"end": 362,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 401,
									"end": 402,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 482,
									"end": 489,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 473,
									"end": 479,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 462,
									"end": 471,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 458,
									"end": 480,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 416,
									"end": 490,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 416,
									"end": 490,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 372,
									"end": 500,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 594,
									"end": 671,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 594,
									"end": 671,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 631,
									"end": 638,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 660,
									"end": 665,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 649,
									"end": 665,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 649,
									"end": 665,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 594,
									"end": 671,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 594,
									"end": 671,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 594,
									"end": 671,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 594,
									"end": 671,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 800,
									"end": 917,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 800,
									"end": 917,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 909,
									"end": 910,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 906,
									"end": 907,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 899,
									"end": 911,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 923,
									"end": 1045,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 923,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1020,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 1014,
									"end": 1019,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1020,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 996,
									"end": 1020,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 996,
									"end": 1020,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 996,
									"end": 1020,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 989,
									"end": 994,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 986,
									"end": 1021,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 976,
									"end": 1039,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 976,
									"end": 1039,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1035,
									"end": 1036,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1032,
									"end": 1033,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1025,
									"end": 1037,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 976,
									"end": 1039,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 976,
									"end": 1039,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 923,
									"end": 1045,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 923,
									"end": 1045,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 69,
									"end": 511,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 69,
									"end": 511,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 69,
									"end": 511,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 69,
									"end": 511,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 69,
									"end": 511,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 69,
									"end": 511,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 69,
									"end": 511,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 69,
									"end": 511,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 69,
									"end": 511,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207de691bf923ccdae3a96a6bc3dde69cd7cdda7e4c4c653574d5b4ecd138c11ec64736f6c63430008070033",
									".code": [
										{
											"begin": 69,
											"end": 511,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 69,
											"end": 511,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 69,
											"end": 511,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69,
											"end": 511,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 69,
											"end": 511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69,
											"end": 511,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 69,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 69,
											"end": 511,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 69,
											"end": 511,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69,
											"end": 511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69,
											"end": 511,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 69,
											"end": 511,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 69,
											"end": 511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69,
											"end": 511,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69,
											"end": 511,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 69,
											"end": 511,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 69,
											"end": 511,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 69,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 69,
											"end": 511,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 69,
											"end": 511,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69,
											"end": 511,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 69,
											"end": 511,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 69,
											"end": 511,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 69,
											"end": 511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69,
											"end": 511,
											"name": "PUSH",
											"source": 0,
											"value": "6661ABD"
										},
										{
											"begin": 69,
											"end": 511,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 69,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 69,
											"end": 511,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 69,
											"end": 511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69,
											"end": 511,
											"name": "PUSH",
											"source": 0,
											"value": "A87D942C"
										},
										{
											"begin": 69,
											"end": 511,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 69,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 69,
											"end": 511,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 69,
											"end": 511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69,
											"end": 511,
											"name": "PUSH",
											"source": 0,
											"value": "ABD1B73D"
										},
										{
											"begin": 69,
											"end": 511,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 69,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 69,
											"end": 511,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 69,
											"end": 511,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 69,
											"end": 511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69,
											"end": 511,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69,
											"end": 511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69,
											"end": 511,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 120,
											"end": 137,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 120,
											"end": 137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 120,
											"end": 137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 120,
											"end": 137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 120,
											"end": 137,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 120,
											"end": 137,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 120,
											"end": 137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 120,
											"end": 137,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 120,
											"end": 137,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 120,
											"end": 137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 120,
											"end": 137,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 120,
											"end": 137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 120,
											"end": 137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 120,
											"end": 137,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 120,
											"end": 137,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 120,
											"end": 137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 120,
											"end": 137,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 120,
											"end": 137,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 120,
											"end": 137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 120,
											"end": 137,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 120,
											"end": 137,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 120,
											"end": 137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 120,
											"end": 137,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 267,
											"end": 509,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 267,
											"end": 509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 267,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 267,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 267,
											"end": 509,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 267,
											"end": 509,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 267,
											"end": 509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 267,
											"end": 509,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 267,
											"end": 509,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 267,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 267,
											"end": 509,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 267,
											"end": 509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 267,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 267,
											"end": 509,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 267,
											"end": 509,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 267,
											"end": 509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 267,
											"end": 509,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 267,
											"end": 509,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 267,
											"end": 509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 267,
											"end": 509,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 267,
											"end": 509,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 267,
											"end": 509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 267,
											"end": 509,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 206,
											"end": 262,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 206,
											"end": 262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 206,
											"end": 262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 206,
											"end": 262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 206,
											"end": 262,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 206,
											"end": 262,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 206,
											"end": 262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 206,
											"end": 262,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 120,
											"end": 137,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 120,
											"end": 137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 120,
											"end": 137,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 120,
											"end": 137,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 120,
											"end": 137,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 120,
											"end": 137,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 267,
											"end": 509,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 267,
											"end": 509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 302,
											"end": 306,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 326,
											"end": 328,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 320,
											"end": 325,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 320,
											"end": 325,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 320,
											"end": 328,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 317,
											"end": 495,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 317,
											"end": 495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 317,
											"end": 495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 349,
											"end": 350,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 343,
											"end": 348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 343,
											"end": 350,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 343,
											"end": 350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 343,
											"end": 350,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 343,
											"end": 350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 371,
											"end": 372,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 364,
											"end": 372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 364,
											"end": 372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 364,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 364,
											"end": 372,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 317,
											"end": 495,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 317,
											"end": 495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 397,
											"end": 399,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 391,
											"end": 396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 391,
											"end": 396,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 391,
											"end": 399,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 388,
											"end": 495,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 388,
											"end": 495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 388,
											"end": 495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 420,
											"end": 421,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 414,
											"end": 419,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 414,
											"end": 421,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 414,
											"end": 421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 414,
											"end": 421,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 414,
											"end": 421,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 442,
											"end": 443,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 435,
											"end": 443,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 435,
											"end": 443,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 435,
											"end": 443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 435,
											"end": 443,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 388,
											"end": 495,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 388,
											"end": 495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 479,
											"end": 484,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 479,
											"end": 484,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 472,
											"end": 484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 472,
											"end": 484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 267,
											"end": 509,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 267,
											"end": 509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 267,
											"end": 509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 267,
											"end": 509,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 206,
											"end": 262,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 206,
											"end": 262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 248,
											"end": 253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 248,
											"end": 253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 248,
											"end": 255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 248,
											"end": 255,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 248,
											"end": 255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 248,
											"end": 255,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 248,
											"end": 255,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 248,
											"end": 255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 248,
											"end": 255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 248,
											"end": 255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 248,
											"end": 255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 248,
											"end": 255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 248,
											"end": 255,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 248,
											"end": 255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 248,
											"end": 255,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 248,
											"end": 255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 248,
											"end": 255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 248,
											"end": 255,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 248,
											"end": 255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 206,
											"end": 262,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 112,
											"end": 117,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 89,
											"end": 92,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 82,
											"end": 119,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7,
											"end": 125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 125,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 131,
											"end": 353,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 131,
											"end": 353,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 224,
											"end": 228,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 264,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 251,
											"end": 260,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 247,
											"end": 265,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 239,
											"end": 265,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 239,
											"end": 265,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 275,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 343,
											"end": 344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 332,
											"end": 341,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 328,
											"end": 345,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 319,
											"end": 325,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 275,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 131,
											"end": 353,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 131,
											"end": 353,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 131,
											"end": 353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 131,
											"end": 353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 131,
											"end": 353,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 359,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 359,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 396,
											"end": 403,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 425,
											"end": 430,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 414,
											"end": 430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 414,
											"end": 430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 359,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 359,
											"end": 436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 359,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 359,
											"end": 436,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 442,
											"end": 675,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 442,
											"end": 675,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 481,
											"end": 484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 504,
											"end": 528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 522,
											"end": 527,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 504,
											"end": 528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 504,
											"end": 528,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 504,
											"end": 528,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 504,
											"end": 528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 495,
											"end": 528,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 495,
											"end": 528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 550,
											"end": 616,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 543,
											"end": 548,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 540,
											"end": 617,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 537,
											"end": 640,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 537,
											"end": 640,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 537,
											"end": 640,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 620,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 620,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 620,
											"end": 638,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 620,
											"end": 638,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 620,
											"end": 638,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 537,
											"end": 640,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 537,
											"end": 640,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 667,
											"end": 668,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 660,
											"end": 665,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 656,
											"end": 669,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 649,
											"end": 669,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 649,
											"end": 669,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 442,
											"end": 675,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 442,
											"end": 675,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 442,
											"end": 675,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 442,
											"end": 675,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 681,
											"end": 861,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 681,
											"end": 861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 729,
											"end": 806,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 726,
											"end": 727,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 807,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 826,
											"end": 830,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 823,
											"end": 824,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 816,
											"end": 831,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 850,
											"end": 854,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 847,
											"end": 848,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 840,
											"end": 855,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"count()": "06661abd",
							"getCount()": "a87d942c",
							"increaseCount()": "abd1b73d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newCount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"count\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"increaseCount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solidity practice/constructor.sol\":\"ConstructorFunc\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"solidity practice/constructor.sol\":{\"keccak256\":\"0x8a790cb9999d1ffd9c9d82037bf5b59ec0ec7653b99644c72a2866877177bdf3\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://387e3f5d5bfa3fe65ff7a0f8a5a42d394b0bc94430773daf1de5ae965269483c\",\"dweb:/ipfs/QmXW3WMUeMdcva84UPQEV5N3xu2VjCdLTmvGhbq6FTPpEr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "solidity practice/constructor.sol:ConstructorFunc",
								"label": "count",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"solidity practice/constructor.sol": {
				"ast": {
					"absolutePath": "solidity practice/constructor.sol",
					"exportedSymbols": {
						"ConstructorFunc": [
							52
						]
					},
					"id": 53,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:30:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 52,
							"linearizedBaseContracts": [
								52
							],
							"name": "ConstructorFunc",
							"nameLocation": "78:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "06661abd",
									"id": 3,
									"mutability": "mutable",
									"name": "count",
									"nameLocation": "132:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 52,
									"src": "120:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "120:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 12,
										"nodeType": "Block",
										"src": "169:32:0",
										"statements": [
											{
												"expression": {
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 8,
														"name": "count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "179:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 9,
														"name": "newCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "185:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "179:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 11,
												"nodeType": "ExpressionStatement",
												"src": "179:14:0"
											}
										]
									},
									"id": 13,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "newCount",
												"nameLocation": "160:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "155:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "155:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "154:15:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "169:0:0"
									},
									"scope": 52,
									"src": "143:58:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "238:24:0",
										"statements": [
											{
												"expression": {
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "248:7:0",
													"subExpression": {
														"id": 16,
														"name": "count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "248:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 18,
												"nodeType": "ExpressionStatement",
												"src": "248:7:0"
											}
										]
									},
									"functionSelector": "abd1b73d",
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseCount",
									"nameLocation": "215:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "228:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "238:0:0"
									},
									"scope": 52,
									"src": "206:56:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "307:202:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 25,
														"name": "count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "320:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3230",
														"id": 26,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "326:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_20_by_1",
															"typeString": "int_const 20"
														},
														"value": "20"
													},
													"src": "320:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 35,
															"name": "count",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "391:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "3230",
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "397:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_20_by_1",
																"typeString": "int_const 20"
															},
															"value": "20"
														},
														"src": "391:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 47,
														"nodeType": "Block",
														"src": "458:37:0",
														"statements": [
															{
																"expression": {
																	"id": 45,
																	"name": "count",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "479:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 24,
																"id": 46,
																"nodeType": "Return",
																"src": "472:12:0"
															}
														]
													},
													"id": 48,
													"nodeType": "IfStatement",
													"src": "388:107:0",
													"trueBody": {
														"id": 44,
														"nodeType": "Block",
														"src": "400:54:0",
														"statements": [
															{
																"expression": {
																	"id": 40,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 38,
																		"name": "count",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3,
																		"src": "414:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "31",
																		"id": 39,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "420:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "414:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 41,
																"nodeType": "ExpressionStatement",
																"src": "414:7:0"
															},
															{
																"expression": {
																	"hexValue": "31",
																	"id": 42,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "442:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"functionReturnParameters": 24,
																"id": 43,
																"nodeType": "Return",
																"src": "435:8:0"
															}
														]
													}
												},
												"id": 49,
												"nodeType": "IfStatement",
												"src": "317:178:0",
												"trueBody": {
													"id": 34,
													"nodeType": "Block",
													"src": "329:54:0",
													"statements": [
														{
															"expression": {
																"id": 30,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 28,
																	"name": "count",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "343:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 29,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "349:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "343:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 31,
															"nodeType": "ExpressionStatement",
															"src": "343:7:0"
														},
														{
															"expression": {
																"hexValue": "30",
																"id": 32,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "371:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 24,
															"id": 33,
															"nodeType": "Return",
															"src": "364:8:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "a87d942c",
									"id": 51,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCount",
									"nameLocation": "276:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "284:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "302:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "302:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "301:6:0"
									},
									"scope": 52,
									"src": "267:242:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 53,
							"src": "69:442:0",
							"usedErrors": []
						}
					],
					"src": "37:474:0"
				},
				"id": 0
			}
		}
	}
}